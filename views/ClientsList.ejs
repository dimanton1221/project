<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>Clients Control</h3>
                <p class="text-subtitle text-muted">
                    Anda bisa mengatur Client yang terdaftar di sistem ini.
                </p>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/">Dashboard</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">
                            User Control
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <section class="section">
        <div class="card">
            <div class="card-header">Daftar Clients</div>
            <div class="card-body">
                <div id="loading" style="display: none">Please wait...</div>
                <div class="mb-5">
                    <button class="btn btn-outline-primary block" data-bs-toggle="modal" data-bs-target="#inlineForm">
                        <i class="bi bi-person-plus-fill"></i> Create New User
                    </button>
                </div>
                <table class="table table-striped" id="myTable" style="display: none">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Nama</th>
                            <th>Alamat</th>
                            <th>Email</th>
                            <th>Nomor Telepon</th>
                            <th>Control</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        <!-- Isi tabel akan di-generate melalui JavaScript -->
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</div>


<!-- Modal Add Clients  -->
<div class="modal fade" id="inlineForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel33" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel33">Add Client</h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <i data-feather="x"></i>
                </button>
            </div>
            <form action="/clients/" id="userForm">
                <div class="modal-body">
                    <label for="name">Nama: </label>
                    <div class="form-group">
                        <input id="name" type="text" placeholder="Nama" class="form-control" />
                    </div>
                    <label for="address">Alamat: </label>
                    <div class="form-group">
                        <textarea id="address" placeholder="Alamat" class="form-control" rows="4"></textarea>
                    </div>
                    <label for="email">Email: </label>
                    <div class="form-group">
                        <input id="email" type="text" placeholder="Email Address" class="form-control" />
                    </div>
                    <label for="phoneNumber">Nomor Telepon: </label>
                    <div class="form-group">
                        <input id="phoneNumber" type="text" placeholder="Nomor Telepon" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="closeButton" type="button" class="btn btn-light-secondary" data-bs-dismiss="modal">
                        <i class="bx bx-x d-block d-sm-none"></i>
                        <span class="d-none d-sm-block">Close</span>
                    </button>
                    <button id="createButton" type="button" class="btn btn-primary ms-1" data-bs-dismiss="modal">
                        <i class="bx bx-check d-block d-sm-none"></i>
                        <span class="d-none d-sm-block">Create Client</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Edit User Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel33" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="editModalLabel">Edit Client</h4>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <i data-feather="x"></i>
                </button>
            </div>
            <form action="/clients/" id="editUserForm">
                <div class="modal-body">
                    <label for="editName">Nama: </label>
                    <div class="form-group">
                        <input id="editName" type="text" placeholder="Nama" class="form-control" />
                    </div>
                    <label for="editAddress">Alamat: </label>
                    <div class="form-group">
                        <textarea id="editAddress" placeholder="Alamat" class="form-control"></textarea>
                    </div>
                    <label for="editEmail">Email: </label>
                    <div class="form-group">
                        <input id="editEmail" type="text" placeholder="Email Address" class="form-control" />
                    </div>
                    <label for="editPhoneNumber">Nomor Telepon: </label>
                    <div class="form-group">
                        <input id="editPhoneNumber" type="text" placeholder="Nomor Telepon" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="editCloseButton" type="button" class="btn btn-light-secondary" data-bs-dismiss="modal">
                        <i class="bx bx-x d-block d-sm-none"></i>
                        <span class="d-none d-sm-block">Close</span>
                    </button>
                    <button id="editSaveButton" type="button" class="btn btn-primary ms-1" data-bs-dismiss="modal">
                        <i class="bx bx-check d-block d-sm-none"></i>
                        <span class="d-none d-sm-block">Save Changes</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Fungsi untuk menampilkan tabel
    function showTable() {
        document.querySelector("#myTable").style.display = "table";
        document.querySelector("#loading").style.display = "none";
    }

    // Fungsi untuk melakukan fetch dan menampilkan tabel setelah fetch selesai
    function fetchData() {
        fetch("/clients")
            .then((response) => response.json())
            .then((data) => {
                if (data.message === "Client found") {
                    // Ambil data dari response
                    var users = data.data;

                    // Manipulasi HTML tabel sesuai dengan data yang diterima
                    var tableBody = document.querySelector("#tableBody");
                    var tableRows = "";

                    users.forEach((user, index) => {
                        tableRows +=
                            "<tr>" +
                            "<td>" +
                            (index + 1) +
                            "</td>" +
                            "<td>" +
                            user.nama +
                            "</td>" +
                            "<td>" +
                            user.alamat +
                            "</td>" +
                            "<td>" +
                            user.email +
                            "</td>" +
                            "<td>" +
                            user.nomor_telepon +
                            "</td>" +
                            `<td>
                                <a href="#" id="deleteButton" class="btn icon icon-left btn-danger delete-button" data-user-id="${user.client_id}">Delete</a>
                                <a href="#" class="btn icon icon-left btn-secondary" data-bs-toggle="modal" data-bs-target="#editModal" onclick="editUser('${user.client_id}')" >Edit</a>
                            </td>` +
                            "</tr>";
                    });

                    tableBody.innerHTML = tableRows;

                    // Inisialisasi simple-datatables setelah tabel selesai dimanipulasi
                    new simpleDatatables.DataTable("#myTable");

                    // Panggil fungsi untuk menampilkan tabel
                    showTable();
                }
            })
            .catch((error) => {
                console.log(error);
                // Tampilkan pesan error jika terjadi masalah dalam fetch data
            });
    }

    // Menampilkan efek loading saat melakukan fetch
    document.querySelector("#loading").style.display = "block";

    // Fetch data dan tampilkan tabel
    fetchData();

    // MOdal Create User
    // Mendapatkan elemen-elemen form
    const form = document.querySelector("#userForm");
    const closeButton = document.querySelector("#closeButton");
    const createButton = document.querySelector("#createButton");
    const nameInput = document.querySelector("#name");
    const addressInput = document.querySelector("#address");
    const emailInput = document.querySelector("#email");
    const phoneNumberInput = document.querySelector("#phoneNumber");

    // Fungsi untuk mereset form
    function resetForm() {
        form.reset();
    }

    // Fungsi untuk menutup modal
    function closeModal() {
        const modal = document.querySelector(".modal");
        const bootstrapModal = bootstrap.Modal.getInstance(modal);
        bootstrapModal.hide();
    }

    // Mengirim data ke server saat tombol "Create Client" ditekan
    createButton.addEventListener("click", function () {
        const clientData = {
            nama: nameInput.value,
            alamat: addressInput.value,
            email: emailInput.value,
            no_telp: phoneNumberInput.value,
        };

        fetch("/clients/", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(clientData),
        })
            .then((response) => {
                if (response.status === 201) {
                    // Jika respons berhasil (status code 201), tampilkan toast sukses
                    Toastify({
                        text: "Client created successfully",
                        duration: 3000,
                        close: true,
                        gravity: "bottom",
                        position: "right",
                        backgroundColor: "#4fbe87",
                    }).showToast();

                    // Reset form dan tutup modal
                    resetForm();
                    closeModal();
                    fetchData();
                } else {
                    // Jika respons tidak berhasil, tampilkan toast error
                    //    jadikan json responnya 
                    response.json().then((data) => {
                        Toastify({
                            text: data.message,
                            duration: 3000,
                            close: true,
                            gravity: "bottom",
                            position: "right",
                            backgroundColor: "#ff4444",
                        }).showToast();
                    });
                    

                }
            })
            .catch((error) => {
                console.error(error);
                // Tampilkan pesan error atau ambil tindakan lain yang diinginkan
            });
    });

    // Reset form dan tutup modal saat tombol "Close" ditekan
    closeButton.addEventListener("click", function () {
        resetForm();
        closeModal();
    });

    // Menutup modal saat tombol "Close" ditekan
    // closeButton.addEventListener("click", function () {
    //     closeModal();
    // });

    // Fungsi untuk mereset form dan menutup modal
    function resetFormAndCloseModal() {
        resetForm();
        closeModal();
    }

    // Menambahkan event listener pada setiap tombol "Delete"
    var tableBody = document.querySelector("#tableBody");

    tableBody.addEventListener("click", function (event) {
        var target = event.target;

        // Periksa apakah elemen yang memicu event adalah tombol "Delete"
        if (target.classList.contains("delete-button")) {
            event.preventDefault();

            // Mendapatkan user_id dari data atribut pada tombol "Delete"
            var user_id = target.getAttribute("data-user-id");

            // Mengirim permintaan fetch DELETE dengan user_id yang diperoleh
            fetch("/clients/" + user_id, {
                method: "DELETE",
            })
                .then(function (response) {
                    if (response.status === 200) {
                        fetchData();
                        // Jika respons berhasil (status code 200), tampilkan toast sukses
                        Toastify({
                            text: "User deleted successfully",
                            duration: 3000,
                            close: true,
                            gravity: "bottom",
                            position: "right",
                            backgroundColor: "#4fbe87",
                        }).showToast();
                    } else {
                        // Jika respons tidak berhasil, tampilkan toast error
                        Toastify({
                            text: "Error deleting user",
                            duration: 3000,
                            close: true,
                            gravity: "bottom",
                            position: "right",
                            backgroundColor: "#ff0000",
                        }).showToast();
                    }
                })
                .catch(function (error) {
                    console.error(error);
                    // Tampilkan pesan error atau ambil tindakan lain yang diinginkan
                });
        }
    });

    function getUserData(userId) {
        return fetch(`/clients/${userId}`)
            .then((response) => response.json())
            .then((data) => data)
            .catch((error) => {
                console.error("Error:", error);
            });
    }
    function editUser(userId) {
        const editModal = document.getElementById("editModal");
        const editUserForm = document.getElementById("editUserForm");
        const editNameInput = document.getElementById("editName");
        const editAddressInput = document.getElementById("editAddress");
        const editEmailInput = document.getElementById("editEmail");
        const editPhoneNumberInput = document.getElementById("editPhoneNumber");
        const saveButton = document.getElementById("editSaveButton");

        getUserData(userId).then((userData) => {
            editNameInput.value = userData.data.nama;
            editAddressInput.value = userData.data.alamat;
            editEmailInput.value = userData.data.email;
            editPhoneNumberInput.value = userData.data.nomor_telepon;

            // Set data-user-id attribute on the form
            editUserForm.setAttribute("data-user-id", userId);

            // Show modal using Bootstrap modal
            // const bootstrapModal = new bootstrap.Modal(editModal);
            // bootstrapModal.show();
        });

        // Close modal when close button is clicked
        const closeButton = document.querySelector('[data-bs-dismiss="modal"]');
        // closeButton.addEventListener("click", () => {
        //     const bootstrapModal = bootstrap.Modal.getInstance(editModal);
        //     bootstrapModal.hide();
        // });

        // Save changes when save button is clicked
        saveButton.addEventListener("click", () => {
            const formData = {
                name: editNameInput.value,
                address: editAddressInput.value,
                email: editEmailInput.value,
                phoneNumber: editPhoneNumberInput.value,
            };

            const userId = editUserForm.getAttribute("data-user-id");
            const url = `/clients/${userId}`;
            const options = {
                method: "PUT",
                body: JSON.stringify(formData),
                headers: {
                    "Content-Type": "application/json",
                },
            };

            fetch(url, options)
                .then((response) => response.json())
                .then((data) => {
                    fetchData();
                    // Handle response from the server
                    console.log(data);
                    Toastify({
                        text: "Client updated successfully",
                        duration: 3000,
                        close: true,
                        gravity: "bottom",
                        position: "right",
                        backgroundColor: "#4fbe87",
                    }).showToast();
                    // // Hide modal
                    // const bootstrapModal = bootstrap.Modal.getInstance(editModal);
                    // bootstrapModal.hide();
                })
                .catch((error) => {
                    // Handle error
                    console.error(error);
                });
        });
    }


</script>

<script src="assets/extensions/toastify-js/src/toastify.js"></script>
<link rel="stylesheet" href="assets/extensions/toastify-js/src/toastify.css" />
<!-- <script src="assets/static/js/pages/toastify.js"></script> -->